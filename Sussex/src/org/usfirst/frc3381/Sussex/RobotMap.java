// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3381.Sussex;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.PowerDistributionPanel;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SD540;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveSystemleft2;
    public static SpeedController driveSystemleft3;
    public static SpeedController driveSystemright0;
    public static SpeedController driveSystemright1;
    public static RobotDrive driveSystemmainDrive;
    public static PowerDistributionPanel driveSystempowerDistroBoardC0;
    public static Encoder driveSystemwheelEncoder;
    public static CANTalon lifterArmtiltMotorC1;
    public static CANTalon lifterArmtiltMotorC2;
    public static SpeedController lifterArmextendMotor4;
    public static SpeedController lifterArmextendMotor5;
    public static DigitalInput lifterArmfullExtentionSwitch2;
    public static DigitalInput lifterArmfullRetractionSwitch3;
    public static DigitalInput lifterArmencoderResetSwitch4;
    public static SpeedController shooterlauncherMotor6;
    public static SpeedController shooterfeederMotor7;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveSystemleft2 = new SD540(2);
        LiveWindow.addActuator("driveSystem", "left2", (SD540) driveSystemleft2);
        
        driveSystemleft3 = new SD540(3);
        LiveWindow.addActuator("driveSystem", "left3", (SD540) driveSystemleft3);
        
        driveSystemright0 = new SD540(0);
        LiveWindow.addActuator("driveSystem", "right0", (SD540) driveSystemright0);
        
        driveSystemright1 = new SD540(1);
        LiveWindow.addActuator("driveSystem", "right1", (SD540) driveSystemright1);
        
        driveSystemmainDrive = new RobotDrive(driveSystemleft2, driveSystemleft3,
              driveSystemright0, driveSystemright1);
        
        driveSystemmainDrive.setSafetyEnabled(true);
        driveSystemmainDrive.setExpiration(0.1);
        driveSystemmainDrive.setSensitivity(0.5);
        driveSystemmainDrive.setMaxOutput(1.0);

        driveSystempowerDistroBoardC0 = new PowerDistributionPanel(0);
        LiveWindow.addSensor("driveSystem", "powerDistroBoardC0", driveSystempowerDistroBoardC0);
        
        driveSystemwheelEncoder = new Encoder(0, 1, false, EncodingType.k4X);
        LiveWindow.addSensor("driveSystem", "wheelEncoder", driveSystemwheelEncoder);
        driveSystemwheelEncoder.setDistancePerPulse(0.086785);
        driveSystemwheelEncoder.setPIDSourceType(PIDSourceType.kDisplacement);
        lifterArmtiltMotorC1 = new CANTalon(1);
        LiveWindow.addActuator("lifterArm", "tiltMotorC1", lifterArmtiltMotorC1);
        
        lifterArmtiltMotorC2 = new CANTalon(2);
        LiveWindow.addActuator("lifterArm", "tiltMotorC2", lifterArmtiltMotorC2);
        
        lifterArmextendMotor4 = new SD540(4);
        LiveWindow.addActuator("lifterArm", "extendMotor4", (SD540) lifterArmextendMotor4);
        
        lifterArmextendMotor5 = new SD540(5);
        LiveWindow.addActuator("lifterArm", "extendMotor5", (SD540) lifterArmextendMotor5);
        
        lifterArmfullExtentionSwitch2 = new DigitalInput(2);
        LiveWindow.addSensor("lifterArm", "fullExtentionSwitch2", lifterArmfullExtentionSwitch2);
        
        lifterArmfullRetractionSwitch3 = new DigitalInput(3);
        LiveWindow.addSensor("lifterArm", "fullRetractionSwitch3", lifterArmfullRetractionSwitch3);
        
        lifterArmencoderResetSwitch4 = new DigitalInput(4);
        LiveWindow.addSensor("lifterArm", "encoderResetSwitch4", lifterArmencoderResetSwitch4);
        
        shooterlauncherMotor6 = new SD540(6);
        LiveWindow.addActuator("shooter", "launcherMotor6", (SD540) shooterlauncherMotor6);
        
        shooterfeederMotor7 = new SD540(7);
        LiveWindow.addActuator("shooter", "feederMotor7", (SD540) shooterfeederMotor7);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
