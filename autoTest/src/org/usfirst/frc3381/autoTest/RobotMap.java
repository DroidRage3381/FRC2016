// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3381.autoTest;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SD540;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveBaseleftMotorController0;
    public static SpeedController driveBaseleftMotorController1;
    public static SpeedController driveBaserightMotorController2;
    public static SpeedController driveBaserightMotorController3;
    public static RobotDrive driveBaseRobotDrive41;
    public static Encoder driveBasewheelEncoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveBaseleftMotorController0 = new SD540(0);
        LiveWindow.addActuator("driveBase", "leftMotorController 0", (SD540) driveBaseleftMotorController0);
        
        driveBaseleftMotorController1 = new SD540(1);
        LiveWindow.addActuator("driveBase", "leftMotorController 1", (SD540) driveBaseleftMotorController1);
        
        driveBaserightMotorController2 = new SD540(2);
        LiveWindow.addActuator("driveBase", "rightMotorController 2", (SD540) driveBaserightMotorController2);
        
        driveBaserightMotorController3 = new SD540(3);
        LiveWindow.addActuator("driveBase", "rightMotorController 3", (SD540) driveBaserightMotorController3);
        
        driveBaseRobotDrive41 = new RobotDrive(driveBaseleftMotorController0, driveBaseleftMotorController1,
              driveBaserightMotorController2, driveBaserightMotorController3);
        
        driveBaseRobotDrive41.setSafetyEnabled(true);
        driveBaseRobotDrive41.setExpiration(0.1);
        driveBaseRobotDrive41.setSensitivity(0.5);
        driveBaseRobotDrive41.setMaxOutput(1.0);

        driveBasewheelEncoder = new Encoder(0, 1, false, EncodingType.k1X);
        LiveWindow.addSensor("driveBase", "wheelEncoder", driveBasewheelEncoder);
        driveBasewheelEncoder.setDistancePerPulse(1.0);
        driveBasewheelEncoder.setPIDSourceType(PIDSourceType.kDisplacement);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
