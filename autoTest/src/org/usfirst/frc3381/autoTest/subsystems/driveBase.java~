// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3381.autoTest.subsystems;

import org.usfirst.frc3381.autoTest.Robot;
import org.usfirst.frc3381.autoTest.RobotMap;
import org.usfirst.frc3381.autoTest.commands.*;

import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.GenericHID;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class driveBase extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController leftMotorController0 = RobotMap.driveBaseleftMotorController0;
    private final SpeedController leftMotorController1 = RobotMap.driveBaseleftMotorController1;
    private final SpeedController rightMotorController2 = RobotMap.driveBaserightMotorController2;
    private final SpeedController rightMotorController3 = RobotMap.driveBaserightMotorController3;
    private final RobotDrive robotDrive41 = RobotMap.driveBaseRobotDrive41;
    private final Encoder wheelEncoder = RobotMap.driveBasewheelEncoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void drive(GenericHID stick) {
    	robotDrive41.arcadeDrive(stick);
    }
    public void manualDrive(double speed, double rotation) {
    	robotDrive41.arcadeDrive(speed, rotation);
    }
    public double getPosition () {
    	return wheelEncoder.getDistance();
    }
    public void resetEncoder() {
    	Robot.driveBase.wheelEncoder.reset();
    }
}

